plugins {
    id 'fabric-loom' version '1.8-SNAPSHOT'
    id 'maven-publish'
    id 'me.shedaniel.unified-publishing' version '0.1.+'
}

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+mc${project.minecraft_version}"
group = project.maven_group

repositories {
    mavenLocal()
    maven { url 'https://maven.fabricmc.net' }
    maven { url 'https://maven.yuluo.dev/repository/maven-public' }
    maven { url "https://maven.shedaniel.me/" }
    maven { url 'https://maven.terraformersmc.com/releases' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation(include("net.kyrptonaught:kyrptconfig:${project.kyrptconfig_version}")) {
        transitive false
    }

    modApi(include("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}")) {
        exclude(group: "net.fabricmc.fabric-api")
    }

    modImplementation("com.terraformersmc:modmenu:${project.mod_menu_version}") {
        transitive false
    }
}

processResources {
    var replaceTokens = [
            'mod_version'                : rootProject.mod_version,
            'minecraft_version_range'    : rootProject.minecraft_version_range,
            'fabric_loader_version_range': rootProject.fabric_loader_version_range,
            'fabric_api_version_range'   : rootProject.fabric_api_version_range,
            'cloth_config_version_range' : rootProject.cloth_config_version_range
    ]

    inputs.properties replaceTokens
    filteringCharset 'UTF-8'

    filesMatching('fabric.mod.json') {
        expand replaceTokens
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

jar {
    from('LICENSE') {
        rename { "${it}_${project.archives_base_name}" }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    withSourcesJar()
}

publishing {
    repositories {
        mavenLocal()

        maven {
            name = 'YuluoMaven'

            def ENV = System.getenv()
            def releaseUrl = 'https://maven.yuluo.dev/repository/maven-releases/'
            def snapshotUrl = 'https://maven.yuluo.dev/repository/maven-snapshots/'
            url = ENV.MOD_RELEASE ? releaseUrl : snapshotUrl

            credentials {
                username ENV.MOD_MAVEN_USER
                password ENV.MOD_MAVEN_PASS
            }
        }
    }

    publications {
        mavenFabric(MavenPublication) {
            artifactId = project.name
            version = 'true'.equalsIgnoreCase(System.getenv('MOD_RELEASE')) ? version : "${version}-SNAPSHOT"
            from components.java
        }
    }
}

unifiedPublishing {
    project {
        displayName = "Diggus Maximus Reborn ${project.mod_version} for ${project.minecraft_version}"
        version = project.version
        gameVersions = [project.minecraft_version]
        gameLoaders = ['fabric']
        releaseType = 'release'
        changelog = 'See the GitHub repository for more information. \nhttps://github.com/qyl27/DiggusMaximus'

        mainPublication tasks.remapJar

        relations {
            depends {
                curseforge = 'fabric-api'
                modrinth = 'fabric-api'
            }
            depends {
                curseforge = 'cloth-config'
                modrinth = 'cloth-config'
            }
        }

		curseforge {
			token = Objects.requireNonNullElse(System.getenv('CURSEFORGE_TOKEN'), "")
			id = '977886'
		}
    }
}
